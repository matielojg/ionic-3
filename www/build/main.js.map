{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/services/domain/categoria.service.ts","../../src/services/auth.service.ts","../../src/services/domain/cliente.service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/config/storage_keys.config.ts","../../src/app/app.component.ts","../../src/interceptors/error-interceptor.ts","../../src/services/storage.service.ts","../../src/config/api.config.ts","../../src/interceptors/auth-interceptor.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 164;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 164\n// module chunks = 3","var map = {\n\t\"../pages/categorias/categorias.module\": [\n\t\t690,\n\t\t2\n\t],\n\t\"../pages/home/home.module\": [\n\t\t691,\n\t\t1\n\t],\n\t\"../pages/profile/profile.module\": [\n\t\t692,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 216;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 216\n// module chunks = 3","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { API_CONFIG } from \"../../config/api.config\";\nimport { CategoriaDTO } from \"../../models/categoria.dto\";\nimport { Observable } from \"rxjs/Rx\";\n\n@Injectable()\nexport class CategoriaService {\n\n    constructor(public http: HttpClient) {\n    }\n\n    findAll() : Observable<CategoriaDTO[]>  {\n        return this.http.get<CategoriaDTO[]>(`${API_CONFIG.baseUrl}/categorias`);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/domain/categoria.service.ts","import { Injectable } from \"@angular/core\";\nimport { CredenciaisDTO } from \"../models/credenciais.dto\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { API_CONFIG } from \"../config/api.config\";\nimport { StorageService } from \"./storage.service\";\nimport { LocalUser } from \"../models/local_user\";\nimport { JwtHelperService  } from '@auth0/angular-jwt';\n\n\n\n@Injectable()\nexport class AuthService {\n\n    jwtHelperService: JwtHelperService = new JwtHelperService();\n\n    constructor(public http: HttpClient,public storage: StorageService) {\n    }\n\n    authenticate(creds : CredenciaisDTO) {\n        return this.http.post(\n            `${API_CONFIG.baseUrl}/login`, \n            creds,\n            {\n                observe: 'response',\n                responseType: 'text'\n            });\n    }\n    successfulLogin(authorizationValue : string) {\n        let tok = authorizationValue.substring(7);\n        let user : LocalUser = {\n            token: tok,\n            email: this.jwtHelperService.decodeToken(tok).sub\n        };\n        this.storage.setLocalUser(user);\n    }\n\n    logout() {\n        this.storage.setLocalUser(null);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/auth.service.ts","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Rx\";\nimport { ClienteDTO } from \"../../models/cliente.dto\";\nimport { API_CONFIG } from \"../../config/api.config\";\nimport { StorageService } from \"../storage.service\";\n\n@Injectable()\nexport class ClienteService {\n\n    constructor(public http: HttpClient, public storage: StorageService) {\n    }\n\n    findByEmail(email: string) : Observable<ClienteDTO> {\n       return this.http.get<ClienteDTO>(`${API_CONFIG.baseUrl}/clientes/email?value=${email}`);\n    }\n\n    getImageFromBucket(id : string) : Observable<any> {\n        let url = `${API_CONFIG.bucketBaseUrl}/cp${id}.jpg`\n        return this.http.get(url, {responseType : 'blob'});\n    }\n} \n\n\n// WEBPACK FOOTER //\n// ./src/services/domain/cliente.service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { HttpClientModule } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { AuthService } from '../services/auth.service';\nimport { CategoriaService } from '../services/domain/categoria.service';\nimport { MyApp } from './app.component';\nimport { ErrorInterceptorProvider } from '../interceptors/error-interceptor';\nimport { StorageService } from '../services/storage.service';\nimport { ClienteService } from '../services/domain/cliente.service';\nimport { AuthInterceptorProvider } from '../interceptors/auth-interceptor';\n\n@NgModule({\n  declarations: [\n    MyApp\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp),\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    CategoriaService,\n    AuthInterceptorProvider,\n    ErrorInterceptorProvider,\n    AuthService,\n    StorageService,\n    ClienteService\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export const STORAGE_KEYS = {\n    localUser: \"localUser\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/storage_keys.config.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: string = 'HomePage';\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Profile', component: 'ProfilePage' },\n      {title: 'Categoria', component:'CategoriasPage'}\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx'; // IMPORTANTE: IMPORT ATUALIZADO\nimport { StorageService } from '../services/storage.service';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor(public storage: StorageService) {\n    }\n    \n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req)\n        .catch((error, caught) => {\n\n            let errorObj = error;\n            if (errorObj.error) {\n                errorObj = errorObj.error;\n            }\n            if (!errorObj.status) {\n                errorObj = JSON.parse(errorObj);\n            }\n\n            console.log(\"Erro detectado pelo interceptor:\");\n            console.log(errorObj);\n\n            switch(errorObj.status) {\n                case 403:\n                this.handle403();\n                break;\n            }\n\n            return Observable.throw(errorObj);\n        }) as any;\n    }\n    \n    handle403() {\n        this.storage.setLocalUser(null);\n    }\n}\n\nexport const ErrorInterceptorProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true,\n};\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/error-interceptor.ts","import { Injectable } from \"@angular/core\";\nimport { STORAGE_KEYS } from \"../config/storage_keys.config\";\n\nimport { LocalUser } from \"../models/local_user\";\n\n@Injectable()\nexport class StorageService {\n\n    getLocalUser() : LocalUser {\n        let usr = localStorage.getItem(STORAGE_KEYS.localUser);\n        if (usr == null) {\n            return null;\n        }\n        else {\n            return JSON.parse(usr);\n        }\n    }\n\n    setLocalUser(obj : LocalUser) {\n        if (obj == null) {\n            localStorage.removeItem(STORAGE_KEYS.localUser);\n        }\n        else {\n            localStorage.setItem(STORAGE_KEYS.localUser, JSON.stringify(obj));\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/storage.service.ts","export const API_CONFIG = {\n    baseUrl: \"http://localhost:8080\",\n    //baseUrl: @crossorigin(origins = \"http://localhost:8100\")\n    bucketBaseUrl: \"https://spring-b0ot.s3.sa-east-1.amazonaws.com\"\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config/api.config.ts","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx'; // IMPORTANTE: IMPORT ATUALIZADO\nimport { StorageService } from '../services/storage.service';\nimport { API_CONFIG } from '../config/api.config';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(public storage: StorageService) {\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        let localUser = this.storage.getLocalUser();\n\n        let N = API_CONFIG.baseUrl.length;\n        let requestToAPI = req.url.substring(0, N) == API_CONFIG.baseUrl;\n\n        if (localUser && requestToAPI) {\n            const authReq = req.clone({headers: req.headers.set('Authorization', 'Bearer ' + localUser.token)});\n            return next.handle(authReq);\n        }\n        else {\n            return next.handle(req);\n        }\n    }\n}\n\nexport const AuthInterceptorProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true,\n};\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/auth-interceptor.ts"],"sourceRoot":""}